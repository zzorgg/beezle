Subject: [PATCH] Updated deps and fixed ActivityResultSender being initialized multiple times, it is supposed to be initialized only once in before the activity is started (so in onCreate)
---
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision 3fdebfc3b537028231cd658e3f81dc678ba99a25)
+++ b/build.gradle.kts	(date 1758824938051)
@@ -3,4 +3,6 @@
     alias(libs.plugins.android.application) apply false
     alias(libs.plugins.kotlin.android) apply false
     alias(libs.plugins.kotlin.compose) apply false
+    // https://github.com/google/ksp/releases
+    id("com.google.devtools.ksp") version "2.2.10-2.0.2" apply false
 }
\ No newline at end of file
Index: app/src/main/java/com/example/beezle/MainAppScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/beezle/MainAppScreen.kt b/app/src/main/java/com/example/beezle/MainAppScreen.kt
--- a/app/src/main/java/com/example/beezle/MainAppScreen.kt	(revision 3fdebfc3b537028231cd658e3f81dc678ba99a25)
+++ b/app/src/main/java/com/example/beezle/MainAppScreen.kt	(date 1758826505606)
@@ -1,27 +1,55 @@
 package com.example.beezle
 
-import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.layout.statusBarsPadding
+import androidx.compose.foundation.layout.width
 import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.*
-import androidx.compose.material3.*
-import androidx.compose.runtime.*
+import androidx.compose.material.icons.filled.AccountBalanceWallet
+import androidx.compose.material.icons.filled.Edit
+import androidx.compose.material.icons.filled.Warning
+import androidx.compose.material3.Button
+import androidx.compose.material3.ButtonDefaults
+import androidx.compose.material3.Card
+import androidx.compose.material3.CardDefaults
+import androidx.compose.material3.CircularProgressIndicator
+import androidx.compose.material3.ExperimentalMaterial3Api
+import androidx.compose.material3.Icon
+import androidx.compose.material3.IconButton
+import androidx.compose.material3.OutlinedButton
+import androidx.compose.material3.Surface
+import androidx.compose.material3.Text
+import androidx.compose.material3.TextButton
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.collectAsState
+import androidx.compose.runtime.getValue
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
-import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.text.font.FontWeight
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
 import androidx.lifecycle.viewmodel.compose.viewModel
-import com.example.beezle.ui.theme.*
+import com.example.beezle.ui.theme.AccentGreen
+import com.example.beezle.ui.theme.BackgroundDark
+import com.example.beezle.ui.theme.PrimaryBlue
+import com.example.beezle.ui.theme.SurfaceDark
+import com.example.beezle.ui.theme.TextPrimary
+import com.example.beezle.ui.theme.TextSecondary
 import com.example.beezle.wallet.SolanaWalletManager
-import androidx.activity.ComponentActivity
+import com.solana.mobilewalletadapter.clientlib.ActivityResultSender
 
 @OptIn(ExperimentalMaterial3Api::class)
 @Composable
-fun MainAppScreen() {
+fun MainAppScreen(sender: ActivityResultSender) {
     val walletManager: SolanaWalletManager = viewModel()
     val walletState by walletManager.walletState.collectAsState()
-    val context = LocalContext.current
 
     Surface(
         modifier = Modifier.fillMaxSize(),
@@ -50,9 +78,9 @@
                 IconButton(
                     onClick = {
                         if (walletState.isConnected) {
-                            walletManager.disconnectWallet(context as ComponentActivity)
+                            walletManager.disconnectWallet(sender)
                         } else {
-                            walletManager.connectWallet(context as ComponentActivity)
+                            walletManager.connectWallet(sender)
                         }
                     }
                 ) {
@@ -132,9 +160,9 @@
             Button(
                 onClick = {
                     if (walletState.isConnected) {
-                        walletManager.disconnectWallet(context as ComponentActivity)
+                        walletManager.disconnectWallet(sender)
                     } else {
-                        walletManager.connectWallet(context as ComponentActivity)
+                        walletManager.connectWallet(sender)
                     }
                 },
                 modifier = Modifier.fillMaxWidth(),
@@ -200,7 +228,7 @@
                 OutlinedButton(
                     onClick = {
                         walletManager.signMessage(
-                            context as ComponentActivity,
+                            sender,
                             "Hello from Beezle! Testing message signing."
                         )
                     },
Index: app/src/main/java/com/example/beezle/onboarding/WalletScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/beezle/onboarding/WalletScreen.kt b/app/src/main/java/com/example/beezle/onboarding/WalletScreen.kt
--- a/app/src/main/java/com/example/beezle/onboarding/WalletScreen.kt	(revision 3fdebfc3b537028231cd658e3f81dc678ba99a25)
+++ b/app/src/main/java/com/example/beezle/onboarding/WalletScreen.kt	(date 1758826555936)
@@ -26,10 +26,12 @@
 import com.example.beezle.ui.theme.*
 import com.example.beezle.wallet.SolanaWalletManager
 import androidx.activity.ComponentActivity
+import com.solana.mobilewalletadapter.clientlib.ActivityResultSender
 
 @Composable
 fun WalletScreen(
-    onWalletConnected: () -> Unit = {}
+    onWalletConnected: () -> Unit = {},
+    sender: ActivityResultSender
 ) {
     val walletManager: SolanaWalletManager = viewModel()
     val walletState by walletManager.walletState.collectAsState()
@@ -164,7 +166,7 @@
                         // Connect Existing Wallet Card
                         ModernCard(
                             onClick = {
-                                walletManager.connectWallet(context as ComponentActivity)
+                                walletManager.connectWallet(sender)
                             }
                         ) {
                             Row(
@@ -209,7 +211,7 @@
                         // Sign In with Solana Card
                         ModernCard(
                             onClick = {
-                                walletManager.signInWithSolana(context as ComponentActivity)
+                                walletManager.signInWithSolana(sender)
                             }
                         ) {
                             Row(
@@ -327,7 +329,7 @@
 
                     OutlinedButton(
                         onClick = {
-                            walletManager.disconnectWallet(context as ComponentActivity)
+                            walletManager.disconnectWallet(sender)
                         },
                         modifier = Modifier.fillMaxWidth(),
                         colors = ButtonDefaults.outlinedButtonColors(
@@ -340,7 +342,7 @@
                     GradientButton(
                         text = if (walletState.isLoading) "Connecting..." else "Connect Wallet",
                         onClick = {
-                            walletManager.connectWallet(context as ComponentActivity)
+                            walletManager.connectWallet(sender)
                         },
                         modifier = Modifier.fillMaxWidth(),
                         icon = Icons.Default.AccountBalanceWallet,
Index: app/src/main/java/com/example/beezle/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/beezle/MainActivity.kt b/app/src/main/java/com/example/beezle/MainActivity.kt
--- a/app/src/main/java/com/example/beezle/MainActivity.kt	(revision 3fdebfc3b537028231cd658e3f81dc678ba99a25)
+++ b/app/src/main/java/com/example/beezle/MainActivity.kt	(date 1758826851803)
@@ -14,10 +14,14 @@
 import com.example.beezle.onboarding.SplashScreen
 import com.example.beezle.onboarding.WalletScreen
 import com.example.beezle.ui.theme.BeezleTheme
+import com.solana.mobilewalletadapter.clientlib.ActivityResultSender
 
 class MainActivity : ComponentActivity() {
+    private lateinit var sender : ActivityResultSender
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
+        sender = ActivityResultSender(this)
         enableEdgeToEdge()
         setContent {
             BeezleTheme {
@@ -47,11 +51,12 @@
                                 navController.navigate("main") {
                                     popUpTo("wallet") { inclusive = true }
                                 }
-                            }
+                            },
+                            sender = sender,
                         )
                     }
                     composable("main") {
-                        MainAppScreen()
+                        MainAppScreen(sender)
                     }
                 }
             }
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 3fdebfc3b537028231cd658e3f81dc678ba99a25)
+++ b/gradle/libs.versions.toml	(date 1758825448421)
@@ -1,13 +1,13 @@
 [versions]
 agp = "8.13.0"
-kotlin = "2.0.21"
-coreKtx = "1.10.1"
+kotlin = "2.2.20"
+coreKtx = "1.17.0"
 junit = "4.13.2"
-junitVersion = "1.1.5"
-espressoCore = "3.5.1"
-lifecycleRuntimeKtx = "2.6.1"
-activityCompose = "1.8.0"
-composeBom = "2024.09.00"
+junitVersion = "1.3.0"
+espressoCore = "3.7.0"
+lifecycleRuntimeKtx = "2.9.4"
+activityCompose = "1.11.0"
+composeBom = "2025.09.01"
 
 [libraries]
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
Index: app/src/main/java/com/example/beezle/wallet/SolanaWalletManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/beezle/wallet/SolanaWalletManager.kt b/app/src/main/java/com/example/beezle/wallet/SolanaWalletManager.kt
--- a/app/src/main/java/com/example/beezle/wallet/SolanaWalletManager.kt	(revision 3fdebfc3b537028231cd658e3f81dc678ba99a25)
+++ b/app/src/main/java/com/example/beezle/wallet/SolanaWalletManager.kt	(date 1758826851799)
@@ -2,11 +2,10 @@
 
 import android.net.Uri
 import android.util.Log
-import androidx.activity.ComponentActivity
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
 import com.solana.mobilewalletadapter.clientlib.*
-import com.solana.mobilewalletadapter.clientlib.signin.SolanaSignInPayload
+import com.solana.mobilewalletadapter.common.signin.SignInWithSolana
 import kotlinx.coroutines.flow.MutableStateFlow
 import kotlinx.coroutines.flow.StateFlow
 import kotlinx.coroutines.flow.asStateFlow
@@ -61,14 +60,13 @@
         }
     }
 
-    fun connectWallet(activity: ComponentActivity) {
+    fun connectWallet(sender: ActivityResultSender) {
         viewModelScope.launch {
             Log.d(TAG, "Starting wallet connection...")
             _walletState.value = _walletState.value.copy(isLoading = true, error = null)
 
             try {
-                val sender = ActivityResultSender(activity)
-                Log.d(TAG, "Created ActivityResultSender, calling connect...")
+                Log.d(TAG, "Created , calling connect...")
 
                 val result = walletAdapter.connect(sender)
                 Log.d(TAG, "Connect result received: ${result::class.simpleName}")
@@ -129,18 +127,17 @@
         }
     }
 
-    fun signInWithSolana(activity: ComponentActivity) {
+    fun signInWithSolana(sender: ActivityResultSender) {
         viewModelScope.launch {
             Log.d(TAG, "Starting Sign In with Solana...")
             _walletState.value = _walletState.value.copy(isLoading = true, error = null)
 
             try {
-                val sender = ActivityResultSender(activity)
                 val result = walletAdapter.signIn(
                     sender,
-                    SolanaSignInPayload(
-                        domain = "solana.com",
-                        statement = "Sign in to Beezle - Your Solana Dueling Game"
+                    SignInWithSolana.Payload(
+                        "solana.com",
+                        "Sign in to Beezle - Your Solana Dueling Game"
                     )
                 )
 
@@ -195,11 +192,10 @@
         }
     }
 
-    fun disconnectWallet(activity: ComponentActivity) {
+    fun disconnectWallet(sender: ActivityResultSender) {
         viewModelScope.launch {
             try {
                 Log.d(TAG, "Disconnecting wallet...")
-                val sender = ActivityResultSender(activity)
                 walletAdapter.disconnect(sender)
 
                 _walletState.value = WalletState() // Reset to initial state
@@ -213,7 +209,7 @@
         }
     }
 
-    fun signMessage(activity: ComponentActivity, message: String) {
+    fun signMessage(sender: ActivityResultSender, message: String) {
         if (!_walletState.value.isConnected) {
             _walletState.value = _walletState.value.copy(
                 error = "Please connect your wallet first"
@@ -226,7 +222,6 @@
             _walletState.value = _walletState.value.copy(isLoading = true, error = null)
 
             try {
-                val sender = ActivityResultSender(activity)
                 val result = walletAdapter.transact(sender) { authResult ->
                     signMessagesDetached(
                         arrayOf(message.toByteArray()),
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 3fdebfc3b537028231cd658e3f81dc678ba99a25)
+++ b/app/build.gradle.kts	(date 1758825323886)
@@ -2,6 +2,9 @@
     alias(libs.plugins.android.application)
     alias(libs.plugins.kotlin.android)
     alias(libs.plugins.kotlin.compose)
+    id("com.google.devtools.ksp")
+    // Keep this at last (https://stackoverflow.com/questions/70550883/warning-the-following-options-were-not-recognized-by-any-processor-dagger-f)
+    id("kotlin-kapt")
 }
 
 android {
@@ -55,10 +58,10 @@
     implementation("androidx.compose.ui:ui-text-google-fonts")
 
     // Material Components for Android (provides Theme.Material3.* XML themes)
-    implementation("com.google.android.material:material:1.12.0")
+    implementation("com.google.android.material:material:1.13.0")
 
-    implementation("androidx.navigation:navigation-compose:2.7.7")
-    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0")
+    implementation("androidx.navigation:navigation-compose:2.9.5")
+    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.9.4")
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
     androidTestImplementation(libs.androidx.espresso.core)
@@ -68,23 +71,23 @@
     debugImplementation(libs.androidx.compose.ui.test.manifest)
 
     // Lottie animations
-    implementation("com.airbnb.android:lottie-compose:6.1.0")
+    implementation("com.airbnb.android:lottie-compose:6.6.9")
 
     // Coil for image loading
-    implementation("io.coil-kt:coil-compose:2.4.0")
-    implementation("io.coil-kt:coil-gif:2.4.0")
+    implementation("io.coil-kt:coil-compose:2.7.0")
+    implementation("io.coil-kt:coil-gif:2.7.0")
     implementation("io.coil-kt:coil-svg:2.4.0")
 
     // Solana Mobile Stack dependencies - Simplified approach
     implementation("com.solanamobile:mobile-wallet-adapter-clientlib-ktx:2.1.0")
 
     // Basic encoders for Solana addresses
-    implementation("org.bitcoinj:bitcoinj-core:0.16.1")
+    implementation("org.bitcoinj:bitcoinj-core:0.17")
 
     // Additional coroutines support for async operations
-    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")
+    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2")
 
     // Additional UI enhancements
-    implementation("androidx.compose.animation:animation:1.5.4")
-    implementation("androidx.compose.animation:animation-graphics:1.5.4")
+    implementation("androidx.compose.animation:animation:1.9.2")
+    implementation("androidx.compose.animation:animation-graphics:1.9.2")
 }
\ No newline at end of file
